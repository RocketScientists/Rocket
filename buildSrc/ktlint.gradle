repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint("com.pinterest:ktlint:${Versions.ktlint}") {
        attributes {
            attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
        }
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "**/src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "**/*.kt"
}

task ktlintApplyToIDEA(type: JavaExec, group: "formatting") {
    description = "To make your AndroidStudio/IDEA IDE align with ktlint"
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "applyToIDEAProject", "-y"
}

task ktlintExec(type: JavaExec, group: "formatting") {
    description = "Run ktlint command with arguments. ie: ./gradlew ktlintCommand -Parg='....' "
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    if (project.hasProperty("arg")) {
        args "$arg".split()
    }
}
